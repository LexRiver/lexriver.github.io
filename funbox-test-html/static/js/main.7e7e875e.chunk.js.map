{"version":3,"sources":["Components/Product.tsx","Components/ProductList.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Product","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClick","e","preventDefault","setState","prevState","isSelected","isHovered","onMouseOut","state","isDisabled","inherits","createClass","key","value","react","className","concat","header","subHeader","text","weight","renderSubText","disabledSubText","selectedSubText","href","React","ProductList","children","App","react_default","a","createElement","ProductList_ProductList","Product_Product","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7e7e875e.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport './Product.scss';\r\n\r\nexport interface Props{\r\n    header:string\r\n    subHeader:string\r\n    text:string\r\n    weight:string\r\n    selectedSubText:string\r\n    disabledSubText:string\r\n    isSelected?:boolean\r\n    isDisabled?:boolean\r\n}\r\n\r\ninterface State{\r\n    isHovered: boolean\r\n    isSelected: boolean\r\n    isDisabled: boolean\r\n}\r\n\r\nexport class Product extends React.Component<Props, State>{\r\n    constructor(props:Props){\r\n        super(props)\r\n        this.state = {\r\n            isSelected: props.isSelected || false,\r\n            isDisabled: props.isDisabled || false,\r\n            isHovered: false,\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            \r\n            <div className={`product-container ${this.state.isSelected?'selected':''} ${this.state.isDisabled?'disabled':''} ${this.state.isHovered?'hover':''}`}>\r\n                <div className=\"product-border\">\r\n                    <div className=\"product\" onClick={this.onClick} onMouseOut={this.onMouseOut}>\r\n                        <div className=\"product-above-header\">{this.state.isHovered && this.state.isSelected ? \"Котэ не одобряет?\" : \"Сказочное заморское яство\"}</div>\r\n                        <div className=\"product-header\">{this.props.header}</div>\r\n                        <div className=\"product-sub-header\">{this.props.subHeader}</div>\r\n                        <div className=\"product-text\">{this.props.text}</div>\r\n                        <div className=\"product-weight\">\r\n                            <div className=\"number\">{this.props.weight}</div>\r\n                            <div className=\"label\">кг</div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"product-sub-text\">{this.renderSubText()}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderSubText(){\r\n        if(this.state.isDisabled) return this.props.disabledSubText\r\n        if(this.state.isSelected) return this.props.selectedSubText\r\n        return <>Чего сидишь? Порадуй котэ, <a href=\"\" onClick={this.onClick}>купи.</a></>\r\n    }\r\n\r\n    onClick = (e:React.MouseEvent) => {\r\n        e.preventDefault()\r\n        this.setState((prevState) => ({\r\n            isSelected: !prevState.isSelected,\r\n            isHovered: false\r\n        }))\r\n    }\r\n\r\n    onMouseOut = () => {\r\n        this.setState({isHovered: true})\r\n    }\r\n}","import * as React from 'react';\r\nimport './ProductList.css';\r\n\r\nexport interface Props {\r\n    children:any\r\n}\r\n\r\nexport function ProductList(props:Props) {\r\n\r\n  return (\r\n    <div className=\"product-list\">\r\n        {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, {Component} from 'react';\nimport './App.scss';\nimport { Product } from './Components/Product';\nimport { ProductList } from './Components/ProductList';\n\n\nclass App extends Component {\n  public render() {\n    return (\n      <div className=\"app\">\n        <h1>Ты сегодня покормил кота?</h1>\n        <ProductList>\n            <Product \n                header=\"Нямушка\" \n                subHeader=\"с фуа-гра\" \n                text={\"10 порций\\nмышь в подарок\"} \n                weight=\"0,5\" \n                selectedSubText=\"Печень утки разварная с артишоками.\"\n                disabledSubText=\"Печалька, с фуа-гра закончился..\"\n                isDisabled={false}\n                />\n            <Product \n                header=\"Нямушка\" \n                subHeader=\"с рыбой\" \n                text={\"40 порций\\n2 мыши в подарок\"} \n                weight=\"2\" \n                selectedSubText=\"Головы щучьи с чесноком да свежайшая сёмгушка.\"\n                disabledSubText=\"Печалька, с рыбой закончился.\"\n                isSelected={true}\n                />\n            <Product \n                header=\"Нямушка\" \n                subHeader=\"с курой\" \n                text={\"100 порций\\n5 мышей в подарок\\nзаказчик доволен\"} \n                weight=\"5\" \n                selectedSubText=\"Филе из цыплят с трюфелями в бульоне.\"\n                disabledSubText=\"Печалька, с курой закончился.\"\n                isDisabled={true}\n                />\n        </ProductList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}